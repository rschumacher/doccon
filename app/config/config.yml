imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "en" }
    # translator:      { fallback: "%locale_fallback%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        #	add the following only if auto_mapping is false:
        # entity_managers:
        #     default:
        #         mappings:
        #             ApplicationSonataUserBundle: ~
        #             SonataUserBundle: ~
        #             gedmo_translatable:
        #                 type: annotation
        #                 prefix: Gedmo\Translatable\Entity
        #                 dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
        #                 alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
        #                 is_bundle: false
        #             gedmo_translator:
        #                 type: annotation
        #                 prefix: Gedmo\Translator\Entity
        #                 dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
        #                 alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
        #                 is_bundle: false
        #             gedmo_loggable:
        #                 type: annotation
        #                 prefix: Gedmo\Loggable\Entity
        #                 dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
        #                 alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
        #                 is_bundle: false
        #             gedmo_tree:
        #                 type: annotation
        #                 prefix: Gedmo\Tree\Entity
        #                 dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
        #                 alias: GedmoTree # this one is optional and will default to the name set for the mapping
        #                 is_bundle: false        

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm



sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to display menu option (login option)

sonata_admin:
    title:      BDK Signalling Programme - Document Control Management
    title_logo: bundles/ebbedoccon/images/BDK_Logo_white_on_black_small.png
    templates:
        dashboard: SonataAdminBundle:Core:dashboard.html.twig

    dashboard:
        blocks:
             -
                 position: left
                 type: sonata.admin.block.admin_list
             -
                 position: right
                 type: sonata.block.service.text
                 settings:
                     content: >
                         <h2>Welcome to the SP Document Control Tool</h2>
                         <p>This is a <code>sonata.block.service.text</code> from the Block
                         Bundle, you can create and add new block in these area by configuring
                         the <code>sonata_admin</code> section.</p> <br /> For instance, here
                         a RSS feed parser (<code>sonata.block.service.rss</code>):
#             -
#                 position: left
#                 type: sonata.block.service.text
#                 settings:
#                     content: >
#                         <h2>Block 2 LEFT</h2>
#                         <p>This is a <code>sonata.block.service.text</code> from the Block
#                         Bundle, you can create and add new block in these area by configuring
#                         the <code>sonata_admin</code> section.</p> <br /> For instance, here
#                         a RSS feed parser (<code>sonata.block.service.rss</code>):
#             -
#                 position: right
#                 type: sonata.block.service.text
#                 settings:
#                     content: >
#                         <h2>Block 2 RIGHT</h2>
#                         <p>This is a <code>sonata.block.service.text</code> from the Block
#                         Bundle, you can create and add new block in these area by configuring
#                         the <code>sonata_admin</code> section.</p> <br /> For instance, here
#                         a RSS feed parser (<code>sonata.block.service.rss</code>):


sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb


sonata_intl:
    timezone:
        locales:
            fr:    Europe/Paris
            en_UK: Europe/London
            de_CH:  Europe/Zurich
            de:     Europe/Berlin
        detectors:
            - sonata.intl.timezone_detector.user
            - sonata.intl.timezone_detector.locale